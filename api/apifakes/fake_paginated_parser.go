// This file was generated by counterfeiter
package apifakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/app-restarter/api"
)

type FakePaginatedParser struct {
	ParseStub        func([]byte) (api.PaginatedResponse, error)
	parseMutex       sync.RWMutex
	parseArgsForCall []struct {
		arg1 []byte
	}
	parseReturns struct {
		result1 api.PaginatedResponse
		result2 error
	}
}

func (fake *FakePaginatedParser) Parse(arg1 []byte) (api.PaginatedResponse, error) {
	fake.parseMutex.Lock()
	fake.parseArgsForCall = append(fake.parseArgsForCall, struct {
		arg1 []byte
	}{arg1})
	fake.parseMutex.Unlock()
	if fake.ParseStub != nil {
		return fake.ParseStub(arg1)
	} else {
		return fake.parseReturns.result1, fake.parseReturns.result2
	}
}

func (fake *FakePaginatedParser) ParseCallCount() int {
	fake.parseMutex.RLock()
	defer fake.parseMutex.RUnlock()
	return len(fake.parseArgsForCall)
}

func (fake *FakePaginatedParser) ParseArgsForCall(i int) []byte {
	fake.parseMutex.RLock()
	defer fake.parseMutex.RUnlock()
	return fake.parseArgsForCall[i].arg1
}

func (fake *FakePaginatedParser) ParseReturns(result1 api.PaginatedResponse, result2 error) {
	fake.ParseStub = nil
	fake.parseReturns = struct {
		result1 api.PaginatedResponse
		result2 error
	}{result1, result2}
}

var _ api.PaginatedParser = new(FakePaginatedParser)
